import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState ,useRef, useEffect} from 'react'
import Web3Modal from "web3modal";
import {providers,Contract} from "ethers";
import { CONTRACT_ADDRESS,CONTRACT_ABI } from '../constants';
export default function Home() {
  const [message,setMessage] = useState("hello karthik");
  const [walletConnected,setWalletConnected] = useState(false);
  const [waves,setWaves] = useState([]);
  const web3modalref  =  useRef();

  async function connectWallet(){
    try{
      await getProviderOrSigner();
      setWalletConnected(true);
      console.log("wallet connected successfully");

    }
    catch(error){
      throw(error);
    }
  }

 async function getProviderOrSigner(needSigner=false){   
         const provider = await web3modalref.current.connect();
         const web3Provider = new providers.Web3Provider(provider);

         const {chainId} = await web3Provider.getNetwork();
         if(chainId!==4){
           window.alert("connect to rinkeby network");
           return;
         }
         
         if(needSigner){
           const signer = web3Provider.getSigner();
           return signer;
         }
     return web3Provider;
  }

  

  useEffect(async ()=>{
     if(!walletConnected){
       web3modalref.current = new Web3Modal({
        network: "rinkeby",
        providerOptions: {},
        disableInjectedProvider: false,
       });
       connectWallet();
     }

     const NewWave = (sender,timestamp,message) => {
      setWaves((prev)=>{
        return [
          ...prev,
          {
            address:sender,
            timestamp:new Date(timestamp*1000),
            message:message
          },
        ]
      })
}

     const provider= await  getProviderOrSigner();
     const contract = new Contract(CONTRACT_ADDRESS,CONTRACT_ABI,provider);

     contract.on("NewWave",NewWave);

     return ()=> {
        if(contract){
          contract.off("NewWave",NewWave);
        }
     }
       
  },[]);
  
  const handleOnChange  = (event)=> {    
    setMessage(event.target.value);
  }

  async function getAllMessages(){
  const signer = await getProviderOrSigner(true);

    const wavePortal =  new Contract(
      CONTRACT_ADDRESS,
      CONTRACT_ABI,
      signer
    );
    const waves = await wavePortal.getAllWaves();    
    const wavesCleaned = waves.slice().reverse().map(wave => {
      return {
        address: wave.waver,
        timestamp: new Date(wave.timestamp * 1000),
        message: wave.message,
      };
    });

    setWaves(wavesCleaned);
  }

async  function sendMessage(){   
  const signer = await  getProviderOrSigner(true);
  const wavePortal =   new Contract(
    CONTRACT_ADDRESS,
    CONTRACT_ABI,
    signer
  );

  const tx =await  wavePortal.wave(message);
  await tx.wait();
  setMessage("");
  console.log("message sent");


 } 

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
       <img 
       className={styles.profilePhoto} 
       src="https://i.imgur.com/LmUiBfF.jpg" 
       alt="this is profile"
       />
      <h1>Hello,this is karthik.</h1>
      <q>I am the only person in the world that I want to understand fully.</q>
      <textarea style={{marginTop:"10px"}}  value={message}
      onChange={handleOnChange} placeholder='enter the message you want to send'
      />
      <button className={styles.button} onClick={sendMessage} >send message</button>
      <button className={styles.button} onClick={getAllMessages}>get all messages</button>

      {
        waves.map(wave => {
          return (<div  className={styles.wave}>
              <span>sender:<h3>{wave.address}</h3></span>
                 <p>{wave.message}</p>
                 <h3>{wave.timestamp.toString()}</h3>
              </div>)
        })
      }
      </main>
      <footer className={styles.footer}>      
      </footer>
    </div>
  )
}
